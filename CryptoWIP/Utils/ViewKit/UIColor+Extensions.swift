//
//  UIColor+Extensions.swift
//  CryptoWIP
//
//  Created by Adrian Zghibarta on 20.01.2022.
//

import UIKit

// Note: Usually this should be autogenerated with SwiftGen for example â€” https://github.com/SwiftGen/SwiftGen
extension UIColor {
    static let primaryText = primaryText(traits: nil)
    static let secondaryText = secondaryText(traits: nil)
    static let accentText = accentText(traits: nil)
    static let background = background(traits: nil)
    static let contrastBackground = contrastBackground(traits: nil)
    static let separator = separator(traits: nil)
    static let positiveAlert = positiveAlert(traits: nil)
    static let negativeAlert = negativeAlert(traits: nil)
    
    static func primaryText(traits: UITraitCollection?) -> UIColor {
        UIColor(named: "PrimaryText", in: nil, compatibleWith: traits)!
    }
    static func secondaryText(traits: UITraitCollection?) -> UIColor {
        UIColor(named: "SecondaryText", in: nil, compatibleWith: traits)!
    }
    static func accentText(traits: UITraitCollection?) -> UIColor {
        UIColor(named: "AccentText", in: nil, compatibleWith: traits)!
    }
    static func background(traits: UITraitCollection?) -> UIColor {
        UIColor(named: "Background", in: nil, compatibleWith: traits)!
    }
    static func contrastBackground(traits: UITraitCollection?) -> UIColor {
        UIColor(named: "ContrastBackground", in: nil, compatibleWith: traits)!
    }
    static func separator(traits: UITraitCollection?) -> UIColor {
        UIColor(named: "Separator", in: nil, compatibleWith: traits)!
    }
    static func positiveAlert(traits: UITraitCollection?) -> UIColor {
        UIColor(named: "PositiveAlert", in: nil, compatibleWith: traits)!
    }
    static func negativeAlert(traits: UITraitCollection?) -> UIColor {
        UIColor(named: "NegativeAlert", in: nil, compatibleWith: traits)!
    }
}
